SELECT *
FROM EMPLOYEE;
SELECT *
FROM JOB;
SELECT *
FROM DEPARTMENT;

SELECT
	EMP_ID,
	EMP_NAME,
	SALARY
FROM EMPLOYEE
WHERE SALARY > 4000000;

SELECT DEPT_TITLE
FROM DEPARTMENT;

SELECT DEPT_ID, EMP_NAME, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
WHERE DEPT_TITLE LIKE '%1부%'
ORDER BY DEPT_CODE ASC;

SELECT DEPT_ID, EMP_NAME, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_CODE = DEPT_ID)
LEFT JOIN JOB ON (JOB.JOB_CODE = EMPLOYEE.JOB_CODE)
WHERE DEPT_TITLE = '총무부' ORDER BY DEPT_CODE ASC;



-- TB_USER 테이블 생성
CREATE TABLE TB_USER(
		USER_NO NUMBER CONSTRAINT TB_USER_PK PRIMARY KEY,
		USER_ID VARCHAR2(30) NOT NULL,
		USER_PW VARCHAR2(30) NOT NULL,
		USER_NAME VARCHAR2(30) NOT NULL,
		ENROLL_DATE DATE DEFAULT CURRENT_DATE
); 

COMMENT ON COLUMN TB_USER.USER_NO IS '사용자 번호';
COMMENT ON COLUMN TB_USER.USER_ID IS '사용자 아이디';
COMMENT ON COLUMN TB_USER.USER_PW IS '사용자 비밀번호';
COMMENT ON COLUMN TB_USER.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN TB_USER.ENROLL_DATE IS '가입일자';

-- USER_NO 컬럼에 삽입될 시퀀스 생성
CREATE SEQUENCE SEQ_USER_NO NOCACHE;

-- 샘플데이터 생성
INSERT INTO TB_USER
VALUES(SEQ_USER_NO.NEXTVAL,
		'USER01', 'PASS01', '유저일', DEFAULT);
	
SELECT * FROM TB_USER;

COMMIT;

UPDATE TB_USER
SET USER_NAME = '김길동'
WHERE USER_ID = 'USER01'
AND USER_PW = 'PASS01';
-- 아이디, 비밀번호 일치  -> 수정 성공(1)
-- 아이디, 비밀번호 불일치 -> 수정 실패(0)

ROLLBACK;















